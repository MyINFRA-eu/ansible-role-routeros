---
#####
#
# @name MyINFRA.eu ~ Ansible RouterOS Role
# @version 2025.07-001
# @since 2025.07-000.beta1
#
# @copyright (c) 2025 (and beyond) - Dennis de Houx, All In One, One For The code
# @author Dennis de Houx <dennis@dehoux.be>
# @license https://creativecommons.org/licenses/by-nc-nd/4.0/deed.en CC BY-NC-ND 4.0
#
###
#
# Ansible tasks to manage snmp settings
#
#####

- name: "SNMP > Disable"
  community.routeros.command:
    commands:
      - /snmp/set enabled=no
  register: snmp_disabled_output
  when:
    - routeros_snmp is undefined or (routeros_snmp is defined and routeros_snmp | length < 1)

- name: "SNMP > Load default settings"
  ansible.builtin.set_fact:
    routeros_snmp_default_enabled: "{{ item.value.enabled | default('no') }}"
    routeros_snmp_default_contact: "{{ item.value.contact | default('') }}"
    routeros_snmp_default_location: "{{ item.value.location | default('') }}"
    routeros_snmp_communities: "{{ routeros_snmp_communities | default([]) + [item.value.communities | dict2items ]}}"
  loop: "{{ routeros_snmp | dict2items }}"
  vars:
    hostname: "{{ item.key | default('') }}"
  when:
    - hostname == "default"
    - routeros_snmp is defined and routeros_snmp | length > 0

- name: "SNMP > Load device settings"
  ansible.builtin.set_fact:
    routeros_snmp_enabled: "{{ item.value.enabled | default(routeros_snmp_default_enabled) }}"
    routeros_snmp_contact: "{{ item.value.contact | default(routeros_snmp_default_contact) }}"
    routeros_snmp_location: "{{ item.value.location | default(routeros_snmp_default_location) }}"
    routeros_snmp_communities: "{{ routeros_snmp_communities | default([]) + [item.value.communities | dict2items ]}}"
  loop: "{{ routeros_snmp | dict2items }}"
  vars:
    hostname: "{{ item.key | default('default') }}"
  when:
    - hostname != "default"
    - hostname == ansible_net_hostname
    - routeros_snmp is defined and routeros_snmp | length > 0

- name: "SNMP > Disable default public community"
  community.routeros.command:
    commands:
      - /snmp/community set [find where name=public] disabled=yes
  register: routeros_snmp_public_community_output
  when:
    - routeros_snmp_enabled is defined and routeros_snmp_enabled is true
    - routeros_snmp is defined and routeros_snmp | length > 0

- name: "SNMP > Configure communities"
  community.routeros.command:
    commands:
      - /snmp/community remove [find where name={{ comname }}]
      - /snmp/community add name={{ comname }} addresses={{ addresses | default('0.0.0.0/0') }} disabled={{ disabled | default('no') }} comment={{ comment | default('""') }} read-access={{ read_access | default('yes') }} write-access={{ write_access | default('no') }} security={{ security | default('none') }} encryption-password={{ enc_pwd | default('""') }} encryption-protocol={{ enc_prot | default('AES') }} authentication-password={{ auth_pwd | default('""') }} authentication-protocol={{ auth_prot | default('SHA1') }}
  with_items: "{{ routeros_snmp_communities }}"
  vars:
    comname: "{{ item.key | community.routeros.quote_argument_value }}"
    comment: "{{ item.value.comment | community.routeros.quote_argument_value }}"
    disabled: "{{ item.value.disabled | community.routeros.quote_argument_value }}"
    addresses: "{{ item.value.addresses | join(',') | community.routeros.quote_argument_value }}"
    write_access: "{{ item.value.write-access | community.routeros.quote_argument_value }}"
    read_access: "{{ item.value.read-access | community.routeros.quote_argument_value }}"
    enc_pwd: "{{ item.value.encryption-password | community.routeros.quote_argument_value }}"
    enc_prot: "{{ item.value.encryption-protocol | upper | community.routeros.quote_argument_value }}"
    security: "{{ item.value.security | community.routeros.quote_argument_value }}"
    auth_pwd: "{{ item.value.authentication-password | community.routeros.quote_argument_value }}"
    auth_prot: "{{ item.value.authentication-protocol | upper | community.routeros.quote_argument_value }}"
  register: routeros_snmp_communities_output
  when:
    - routeros_snmp_enabled
    - routeros_snmp is defined and routeros_snmp | length > 0

- name: "SNMP > Configure snmp settings"
  community.routeros.command:
    commands:
      - /snmp/set contact={{ routeros_snmp_contact | community.routeros.quote_argument_value }} location={{ routeros_snmp_location | community.routeros.quote_argument_value }} enabled={{ 'yes' if routeros_snmp_enabled else 'no' | community.routeros.quote_argument_value }}
  register: routeros_snmp_output
  when:
    - routeros_snmp_enabled
    - routeros_snmp is defined and routeros_snmp | length > 0

- name: "SNMP > Add firewall rules"
  ansible.builtin.set_fact:
    routeros_firewall_rules: "{{ routeros_firewall_rules | default([]) + [{'type': 'ipv4', 'chain': chain, 'arguments': arguments, 'comment': 'SNMP Service ~ ' + comment}] }}"
  loop:
    - {
        "chain": "input",
        "comment": "Inbound",
        "arguments":
          [
            "action=accept",
            "src-address-list=snmp",
            "port=161",
            "protocol=udp",
          ],
      }
    - {
        "chain": "input",
        "comment": "Inbound",
        "arguments":
          [
            "action=accept",
            "src-address-list=snmp",
            "port=161",
            "protocol=tcp",
          ],
      }
    - {
        "chain": "forward",
        "comment": "Forward",
        "arguments":
          [
            "action=accept",
            "src-address-list=snmp",
            "port=161",
            "protocol=udp",
          ],
      }
    - {
        "chain": "forward",
        "comment": "Forward",
        "arguments":
          [
            "action=accept",
            "src-address-list=snmp",
            "port=161",
            "protocol=tcp",
          ],
      }
    - {
        "chain": "forward",
        "comment": "Forward",
        "arguments":
          [
            "action=accept",
            "dst-address-list=snmp",
            "port=161",
            "protocol=udp",
          ],
      }
    - {
        "chain": "forward",
        "comment": "Forward",
        "arguments":
          [
            "action=accept",
            "dst-address-list=snmp",
            "port=161",
            "protocol=tcp",
          ],
      }
    - {
        "chain": "output",
        "comment": "Outbound",
        "arguments":
          [
            "action=accept",
            "dst-address-list=snmp",
            "port=161",
            "protocol=udp",
          ],
      }
    - {
        "chain": "output",
        "comment": "Outbound",
        "arguments":
          [
            "action=accept",
            "dst-address-list=snmp",
            "port=161",
            "protocol=tcp",
          ],
      }
  register: snmp_firewall_output
  vars:
    chain: "{{ item.chain }}"
    comment: "{{ item.comment }}"
    arguments: "{{ item.arguments }}"
  when:
    - routeros_snmp_enabled
    - routeros_snmp is defined and routeros_snmp | length > 0

- name: "SNMP > Add firewall address-list"
  ansible.builtin.set_fact:
    routeros_address_list: "{{ routeros_address_list | default([]) + [{'list': 'snmp', 'address': addresses, 'comment': 'SNMP Server - ' + comname + ' (' + comment + ')', 'disabled': disabled}] }}"
  with_items: "{{ routeros_snmp_communities }}"
  vars:
    comname: "{{ item.key }}"
    comment: "{{ item.value.comment | default('') }}"
    disabled: "{{ item.value.disabled | default('no') }}"
    addresses: "{{ item.value.addresses | default(['0.0.0.0/0']) }}"
    #addresses: "{{ item.value.addresses | default(['0.0.0.0/0']) | join(',') }}"
  register: snmp_firewall_adress_output
  when:
    - routeros_snmp_enabled
    - routeros_snmp is defined and routeros_snmp | length > 0

- name: "SNMP > Show output"
  ansible.builtin.debug:
    msg:
      - "COMMUNITY     : {{ routeros_snmp_public_community_output }}"
      - "COMMUNITY     : {{ routeros_snmp_communities_output }}"
      - "SNMP          : {{ routeros_snmp_output | default('') }}"
      - "FIREWALL      : {{ snmp_firewall_output | default('') }}"
      - "FIREWALL RULES: {{ routeros_firewall_rules | default('') }}"
      - "ADDRESS LIST  : {{ routeros_address_list | default('') }}"
  tags:
    - routeros_show_output
