---
#####
#
# @name MyINFRA.eu ~ Ansible RouterOS Role
# @version 2025.06-000.beta1
# @since 2025.06-000.beta1
#
# @copyright (c) 2025 (and beyond) - Dennis de Houx, All In One, One For The code
# @author Dennis de Houx <dennis@dehoux.be>
# @license https://creativecommons.org/licenses/by-nc-nd/4.0/deed.en CC BY-NC-ND 4.0
#
###
#
# Ansible role to manage address lists and firewall rules.
#
#####

###
### Address lists (IPv4)
##############################

- name: "ADDRESS-LISTS > Load default settings (IPv4)"
  ansible.builtin.set_fact:
    address_list: "{{ address_list | default({}) | combine(address_list_data) }}"
  loop: "{{ routeros_firewall | dict2items }}"
  vars:
    hostname: "{{ item.key | default('') }}"
    address_list_data: "{{ item.value.ipv4.address_list }}"
  when:
    - hostname == "default"
    - address_list_data is defined and address_list_data | length > 0
    - routeros_firewall is defined and routeros_firewall | length > 0

- name: "ADDRESS-LISTS > Load device settings (IPv4)"
  ansible.builtin.set_fact:
    address_list: "{{ address_list | default({}) | combine(address_list_data) }}"
  loop: "{{ routeros_firewall | dict2items }}"
  vars:
    hostname: "{{ item.key | default('default') }}"
    address_list_data: "{{ item.value.ipv4.address_list }}"
  when:
    - hostname != "default"
    - hostname == ansible_net_hostname
    - address_list_data is defined and address_list_data | length > 0
    - routeros_firewall is defined and routeros_firewall | length > 0

- name: "ADDRESS-LISTS > Configure address lists (IPv4)"
  ansible.builtin.set_fact:
    routeros_address_list: "{{ routeros_address_list | default([]) + [{'list': listname, 'address': addresses, 'comment': comment, 'enabled': enabled}] }}"
  loop: "{{ address_list | dict2items }}"
  vars:
    listname: "{{ item.key | default('') }}"
    #addresses: "{{ item.value.addresses | default([]) | join(',') }}"
    addresses: "{{ item.value.addresses | default([]) }}"
    comment: "{{ item.value.comment | default('') }}"
    enabled: "{{ item.value.enabled | default(true) }}"
  when:
    - listname is defined and listname | length > 0
    - address_list is defined and address_list | length > 0

- name: "ADDRESS-LISTS > Remove address lists (IPv4)"
  community.routeros.command:
    commands:
      - /ip/firewall/address-list remove [find where list={{ list }}]
  loop: "{{ routeros_address_list }}"
  vars:
    list: "{{ item.0.list | default('') | community.routeros.quote_argument_value }}"
    enabled: "{{ item.0.enabled | default('yes') }}"
  register: address_list_remove_output
  when:
    - enabled is true
    - list is defined and list | length > 0
    - routeros_address_list is defined and routeros_address_list | length > 0

- name: "ADDRESS-LISTS > Create address lists (IPv4)"
  community.routeros.command:
    commands:
      - /ip/firewall/address-list add list={{ list }} address={{ item.1 }} comment={{ comment }}
  loop: "{{ routeros_address_list | subelements('address') }}"
  vars:
    list: "{{ item.0.list | default('') | community.routeros.quote_argument_value }}"
    #address: "{{ item.0.address | default('') | community.routeros.quote_argument_value }}"
    address: "{{ item.1 | default('') | community.routeros.quote_argument_value }}"
    comment: "{{ item.0.comment | default('') | community.routeros.quote_argument_value }}"
    enabled: "{{ item.0.enabled | default('yes') }}"
  register: address_list_add_output
  when:
    - enabled is true
    - list is defined and list | length > 0
    - address is defined and address | length > 0
    - routeros_address_list is defined and routeros_address_list | length > 0

###
### Address lists (IPv6)
##############################

- name: "ADDRESS-LISTS > Load default settings (IPv6)"
  ansible.builtin.set_fact:
    address_list6: "{{ address_list6 | default({}) | combine(address_list_data) }}"
  loop: "{{ routeros_firewall | dict2items }}"
  vars:
    hostname: "{{ item.key | default('') }}"
    address_list_data: "{{ item.value.ipv6.address_list }}"
  when:
    - hostname == "default"
    - address_list_data is defined and address_list_data | length > 0
    - routeros_firewall is defined and routeros_firewall | length > 0

- name: "ADDRESS-LISTS > Load device settings (IPv6)"
  ansible.builtin.set_fact:
    address_list6: "{{ address_list6 | default({}) | combine(address_list_data) }}"
  loop: "{{ routeros_firewall | dict2items }}"
  vars:
    hostname: "{{ item.key | default('default') }}"
    address_list_data: "{{ item.value.ipv6.address_list }}"
  when:
    - hostname != "default"
    - hostname == ansible_net_hostname
    - address_list_data is defined and address_list_data | length > 0
    - routeros_firewall is defined and routeros_firewall | length > 0

- name: "ADDRESS-LISTS > Configure address lists (IPv6)"
  ansible.builtin.set_fact:
    routeros_address_list6: "{{ routeros_address_list6 | default([]) + [{'list': listname, 'address': addresses, 'comment': comment, 'enabled': enabled}] }}"
  loop: "{{ address_list6 | dict2items }}"
  vars:
    listname: "{{ item.key | default('') }}"
    #addresses: "{{ item.value.addresses | default([]) | join(',') }}"
    addresses: "{{ item.value.addresses | default([]) }}"
    comment: "{{ item.value.comment | default('') }}"
    enabled: "{{ item.value.enabled | default(true) }}"
  when:
    - listname is defined and listname | length > 0
    - address_list6 is defined and address_list6 | length > 0

- name: "ADDRESS-LISTS > Remove address lists (IPv6)"
  community.routeros.command:
    commands:
      - /ipv6/firewall/address-list remove [find where list={{ list }}]
  loop: "{{ routeros_address_list6 }}"
  vars:
    list: "{{ item.0.list | default('') | community.routeros.quote_argument_value }}"
    enabled: "{{ item.0.enabled | default('yes') }}"
  register: address_list6_remove_output
  when:
    - enabled is true
    - list is defined and list | length > 0
    - routeros_address_list6 is defined and routeros_address_list6 | length > 0

- name: "ADDRESS-LISTS > Create address lists (IPv6)"
  community.routeros.command:
    commands:
      - /ipv6/firewall/address-list add list={{ list }} address={{ item.1 }} comment={{ comment }}
  loop: "{{ routeros_address_list6 | subelements('address') }}"
  vars:
    list: "{{ item.0.list | default('') | community.routeros.quote_argument_value }}"
    #address: "{{ item.0.address | default('') | community.routeros.quote_argument_value }}"
    address: "{{ item.1 | default('') | community.routeros.quote_argument_value }}"
    comment: "{{ item.0.comment | default('') | community.routeros.quote_argument_value }}"
    enabled: "{{ item.0.enabled | default('yes') }}"
  register: address_list6_add_output
  when:
    - enabled is true
    - list is defined and list | length > 0
    - address is defined and address | length > 0
    - routeros_address_list6 is defined and routeros_address_list6 | length > 0

###
### Show Address lists Output
##############################

- name: "ADDRESS-LIST > Show output"
  ansible.builtin.debug:
    msg:
      - "IPv4 REMOVE : {{ address_list_remove_output | default('') }}"
      - "IPv4 CREATE : {{ address_list_add_output | default('') }}"
      - "IPv6 REMOVE : {{ address_list6_remove_output | default('') }}"
      - "IPv6 CREATE : {{ address_list6_add_output | default('') }}"
  when:
    - routeros_show_output is true
  tags:
    - routeros_show_output
